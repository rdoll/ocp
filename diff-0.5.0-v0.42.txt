Only in /var/www/ocp/0.5.0: diff-0.5.0-v0.42.txt
Only in /var/www/ocp/0.5.0: diff-0.5.0-v0.5.1.ie.txt
Only in /var/www/ocp/0.5.0: NOTES.txt
Only in /var/www/ocp/0.42: OblivCharPlanner.html
Only in /var/www/ocp/0.5.0: ocp.html
diff -r /var/www/ocp/0.5.0/scripts/ocp-birth.js /var/www/ocp/0.42/scripts/ocp-birth.js
9a10,11
> **
> ** *** Should show attributes in input summary?
176,177c178
<         for (var birthIndex in this._data) {
<             var birth = this._data[birthIndex];
---
>         for each (var birth in this._data) {
218,219c219
<                         'onClick="ocp.birth.select(\'' + birth + '\')" ' +
<                     '/>' +
---
>                         'onClick="ocp.birth.select(\'' + birth + '\')" />' +
269d268
<     // *** Should add attributes to list of specials?
281,282c280,281
<             for (var specIndex in specs) {
<                 list += '<span class="specialDescItem">' + specs[specIndex] + '</span>';
---
>             for each (var spec in specs) {
>                 list += '<span class="specialDescItem">' + spec + '</span>';
diff -r /var/www/ocp/0.5.0/scripts/ocp-cclass.js /var/www/ocp/0.42/scripts/ocp-cclass.js
224,226d223
<     // *** Lots of code could be simplified if I added _customData to _data
<     // *** Would use new .custom:boolean property to mark predefined vs. custom
<     // *** Would preclude ever being able to set a custom name, tho (name is _data index)
247,248c244
<         return (dojo.indexOf(this._getCurrent().favoredAttrs, attr) == -1
<             ? 0 : ocp.ATTR_BONUS_FAV);
---
>         return (this._getCurrent().favoredAttrs.indexOf(attr) == -1 ? 0 : ocp.ATTR_BONUS_FAV);
254,255c250,251
<         return (dojo.indexOf(this._getCurrent().majorSkills, skill) == -1
<             ? ocp.SKILL_MIN : ocp.SKILL_MAJOR_MIN);
---
>         return (this._getCurrent().majorSkills.indexOf(skill) == -1 ?
>             ocp.SKILL_MIN : ocp.SKILL_MAJOR_MIN);
262,263c258,259
<         return (this._getCurrent().specialization == ocp.skills[skill].spec
<             ? ocp.SKILL_BONUS_SPEC : 0);
---
>         return (this._getCurrent().specialization == ocp.skills[skill].spec ?
>             ocp.SKILL_BONUS_SPEC : 0);
312c308
<         return (dojo.indexOf(this._getCurrent().majorSkills, skill) == -1 ? false : true);
---
>         return (this.majors.indexOf(skill) == -1 ? false : true);
355,358c351,353
<         for (var spec in ocp.specs) {
<             var skills = ocp.specs[spec].skills;
<             for (var skillIndex in skills) {
<                 data.majorSkills.push(skills[skillIndex]);
---
>         for each (var spec in ocp.specs) {
>             for each (var skill in spec.skills) {
>                 data.majorSkills.push(skill);
533,534c528
<                         'onClick="ocp.cclass.selectPredefined(\'' + cclass + '\')" ' +
<                     '/>' +
---
>                         'onClick="ocp.cclass.selectPredefined(\'' + cclass + '\')" />' +
620c614
<                 var bonus = (dojo.indexOf(data.favoredAttrs, attr) == -1 ? 0 : ocp.ATTR_BONUS_FAV);
---
>                 var bonus = (data.favoredAttrs.indexOf(attr) == -1 ? 0 : ocp.ATTR_BONUS_FAV);
629,631c623,624
<                 var majorBonus = (dojo.indexOf(data.majorSkills, skill) == -1
<                     ? 0 : ocp.SKILL_BONUS_MAJOR);
<                 var specBonus = (dojo.indexOf(ocp.specs[data.specialization].skills, skill) == -1
---
>                 var majorBonus = (data.majorSkills.indexOf(skill) == -1 ? 0 : ocp.SKILL_BONUS_MAJOR);
>                 var specBonus = (ocp.specs[data.specialization].skills.indexOf(skill) == -1
636,638c629,631
<                         (majorBonus > 0 ? ' major' : '') + '"' +
<                     '>' +
<                         (bonus > 0 ? bonus : '' ) +
---
>                         (majorBonus > 0 ? ' major' : '') +
>                         '">' +
>                         (bonus > 0 ? bonus : '' )+
688c681
<             var isFav = (dojo.indexOf(customData.favoredAttrs, attr) == -1 ? false : true);
---
>             var isFav = (customData.favoredAttrs.indexOf(attr) == -1 ? false : true);
735,737c728,729
<                 for (var skillIndex in coreAttr.skills) {
<                     var skill = coreAttr.skills[skillIndex];
<                     var isMajor = (dojo.indexOf(customData.majorSkills, skill) == -1 ? false : true);
---
>                 for each (var skill in coreAttr.skills) {
>                     var isMajor = (customData.majorSkills.indexOf(skill) == -1 ? false : true);
855,857c847
<         var skills = ocp.specs[spec].skills;
<         for (var skillIndex in skills) {
<             var skill = skills[skillIndex];
---
>         for each (var skill in ocp.specs[spec].skills) {
948c938
<                 (dojo.indexOf(customData.favoredAttrs, attr) == -1 ? false : true));
---
>                 (customData.favoredAttrs.indexOf(attr) == -1 ? false : true));
956c946
<                 (dojo.indexOf(customData.majorSkills, skill) == -1 ? false : true));
---
>                 (customData.majorSkills.indexOf(skill) == -1 ? false : true));
diff -r /var/www/ocp/0.5.0/scripts/ocp-existing.js /var/www/ocp/0.42/scripts/ocp-existing.js
30c30
<         return (dojo.indexOf(this.majors, skill) == -1 ? false : true);
---
>         return (this._majors.indexOf(skill) == -1 ? false : true);
94,97c94,96
<         for (var specIndex in ocp.specs) {
<             var skills = ocp.specs[specIndex].skills;
<             for (var skillIndex in skills) {
<                 this._majors.push(skills[skillIndex]);
---
>         for each (var spec in ocp.specs) {
>             for each (var skill in spec.skills) {
>                 this._majors.push(skill);
170,172c169
<             var skills = ocp.specs[spec].skills;
<             for (var skillIndex in skills) {
<                 var skill = skills[skillIndex];
---
>             for each (var skill in ocp.specs[spec].skills) {
461,464c458
<             var skills = ocp.specs[spec].skills;
<             for (var skillIndex in skills) {
<                 var skill = skills[skillIndex];
< 
---
>             for each (var skill in ocp.specs[spec].skills) {
diff -r /var/www/ocp/0.5.0/scripts/ocp-input.js /var/www/ocp/0.42/scripts/ocp-input.js
15c15,24
<     // Public: Return whether using a new (true) or existing (false) character
---
>     // Public: Given the min and max values of a slider, return the integral value
>     //         that will correspond to the given percentage
>     //         This needs to match the implementation in Dijit sliders so the value
>     //         used in a rule label matches the value of the slider at that position.
>     sliderPercentValue: function (min, max, pct) {
>         return Math.round((max - min) * pct) + min;
>     },
> 
> 
>     // Public: Return whether using a new (true) or existing character (false)
43,51d51
<     // Public: Given the min and max values of a slider, return the integral value
<     //         that will correspond to the given percentage
<     //         This needs to match the implementation in Dijit sliders so the value
<     //         used in a rule label matches the value of the slider at that position.
<     sliderPercentValue: function (min, max, pct) {
<         return Math.round((max - min) * pct) + min;
<     },
< 
< 
59c59
<         // Capture whenever the stack changes the currently displayed child
---
>         // Capture whenever the content of the stack changes
diff -r /var/www/ocp/0.5.0/scripts/ocp.js /var/www/ocp/0.42/scripts/ocp.js
12c12
<     VERSION: '0.5.0',
---
>     VERSION: '0.42',
398,403d397
<         totals[10] = nextLevel(totals[totals.length - 1], {
<             agi:5, spe:5, end:5, hea:18, mag:0, fat:10, enc:0,
<             blu:-1, mar:7, sec:3, sne:12, acr:4, ath:3, lig:3, arm:10, mer:3, spc:3
<         });
<         wasted[10] = { blu:'Skill reduced from being imprisoned.', mer:'', spc:'' };
< 
405,415d398
< 
<         for (var lvl = 1; lvl <= maxLevel; lvl++) {
<             for (var skill in wasted[lvl]) {
<                 var attr = ocp.skills[skill].attr;
<                 if (wasted[lvl][skill].length < 1) {
<                     wasted[lvl][skill] = 'Skill ups were wasted because ' +
<                         ocp.coreAttrs[attr].name + ' was not leveled.';
<                 }
<             }
<         }
< 
421,423c404,405
<         var classMajors = ocp.cclass.majors;
<         for (var skillIndex in classMajors) {
<             ocp.existing._majors.push(classMajors[skillIndex]);
---
>         for each (var skill in ocp.cclass.majors) {
>             ocp.existing.majors.push(skill);
diff -r /var/www/ocp/0.5.0/scripts/ocp-level.js /var/www/ocp/0.42/scripts/ocp-level.js
119,121c119
<         var majors = ocp.input.majors;
<         for (var skillIndex in majors) {
<             var skill = majors[skillIndex];
---
>         for each (var skill in ocp.input.majors) {
164,165c162
<         for (var attrIndex in attrOrder) {
<             var attr = attrOrder[attrIndex];
---
>         for each (var attr in attrOrder) {
184,188c181,182
<         for (var attrIndex in attrsToLevel) {
<             var attr = attrsToLevel[attrIndex];
<             var skills = ocp.coreAttrs[attr].skills;
<             for (var skillIndex in skills) {
<                 var skill = skills[skillIndex];
---
>         for each (var attr in attrsToLevel) {
>             for each (var skill in ocp.coreAttrs[attr].skills) {
202,203c196
<         for (var skillIndex in bonusSkills) {
<             var skill = bonusSkills[skillIndex];
---
>         for each (var skill in bonusSkills) {
239c232
<                     var skillPoints = dojo.indexOf(this._attrBonus, attrPoints);
---
>                     var skillPoints = this._attrBonus.indexOf(attrPoints);
293c286
<                 if (dojo.indexOf(burnAttrs, attr) == -1) {
---
>                 if (burnAttrs.indexOf(attr) == -1) {
299,300c292
<             for (var attrIndex in burnAttrs) {
<                 var attr = burnAttrs[attrIndex];
---
>             for each (var attr in burnAttrs) {
303,305c295
<                 var skills = ocp.coreAttrs[attr].skills;
<                 for (var skillIndex in skills) {
<                     var skill = skills[skillIndex];
---
>                 for each (var skill in ocp.coreAttrs[attr].skills) {
354,357d343
<         // *** BUG: These are implied as minor skills, but we never check for it!
<         // *** BUG: This means we can consume more than 10 points in major skills!
<         // *** BUG: With all defaults, choose Warrior class to see bug.
< 
359,361c345,346
<         // raise as many other minor skills we need to maximize the attribute bonuses
<         for (var attrIndex in attrsToLevel) {
<             var attr = attrsToLevel[attrIndex];
---
>         // raise as many other skills we need to maximize the attribute bonuses
>         for each (var attr in attrsToLevel) {
373,375c358
<                 var skills = ocp.coreAttrs[attr].skills;
<                 for (var skillIndex in skills) {
<                     var skill = skills[skillIndex];
---
>                 for each (var skill in ocp.coreAttrs[attr].skills) {
384,385c367
<                 for (var skillIndex in skillsForAttr) {
<                     var skill = skillsForAttr[skillIndex];
---
>                 for each (var skill in skillsForAttr) {
410c392
<                         var skillPoints = dojo.indexOf(this._attrBonus, attrPoints);
---
>                         var skillPoints = this._attrBonus.indexOf(attrPoints);
diff -r /var/www/ocp/0.5.0/scripts/ocp-order.js /var/www/ocp/0.42/scripts/ocp-order.js
49,50c49
<         for (var attrIndex in this._attrs) {
<             var attr = this._attrs[attrIndex];
---
>         for each (var attr in this._attrs) {
diff -r /var/www/ocp/0.5.0/scripts/ocp-race.js /var/www/ocp/0.42/scripts/ocp-race.js
6a7,8
> ** *** Gah: int is a potential future reserved word! Change to ite? Or put all fields in quotes? ***
> **
361,364c363,364
<             for (var raceIndex in this._data) {
<                 var attributes = this._data[raceIndex].attributes;
<                 for (var genderIndex in attributes) {
<                     var gender = attributes[genderIndex];
---
>             for each (var race in this._data) {
>                 for each (var gender in race.attributes) {
372c372
<                         // Update the min/max as necessary
---
>                         // Update the min/max if necessary
403,404c403
<                         'class="raceImage" alt="[' + race + ' Image]" ' +
<                     '/>' +
---
>                         'class="raceImage" alt="[' + race + ' Image]" />' +
412,414c411,413
<             specs = (specs.length > 0 ? specs : [ 'No special abilities or weaknesses.' ]);
<             for (var specIndex in specs) {
<                 over += '<li class="raceSpecialItem">' + specs[specIndex] + '</li>';
---
>             specs = (specs.length > 0 ? specs : [ "No special abilities or weaknesses." ]);
>             for each (var spec in specs) {
>                 over += '<li class="raceSpecialItem">' + spec + '</li>';
475,478c474,475
<             for (var raceIndex in this._data) {
<                 var attributes = this._data[raceIndex].attributes;
<                 for (var genderIndex in attributes) {
<                     var gender = attributes[genderIndex];
---
>             for each (var race in this._data) {
>                 for each (var gender in race.attributes) {
492,495c489,490
<         for (var raceIndex in this._data) {
<             var attributes = this._data[raceIndex].attributes;
<             for (var genderIndex in attributes) {
<                 var gender = attributes[genderIndex];
---
>         for each (var race in this._data) {
>             for each (var gender in race.attributes) {
520,522c515
<             var skills = ocp.coreAttrs[attr].skills;
<             for (var skillIndex in skills) {
<                 var skill = skills[skillIndex];
---
>             for each (var skill in ocp.coreAttrs[attr].skills) {
527,532c520,523
<                     det +=
<                         '<td rowspan="' + skills.length + '" class="vertical" ' +
<                             'title="Skills that affect ' + ocp.coreAttrs[attr].name + '"' +
<                         '>' +
<                             ocp.verticalize(attr) +
<                         '</td>';
---
>                     det += '<td rowspan="' + ocp.coreAttrs[attr].skills.length +
>                         '" class="vertical" title="Skills that affect ' +
>                             ocp.coreAttrs[attr].name + '">' +
>                         ocp.verticalize(attr) + '</td>';
611,612c602,603
<             for (var specIndex in specs) {
<                 list += '<span class="specialDescItem">' + specs[specIndex] + '</span>';
---
>             for each (var spec in specs) {
>                 list += '<span class="specialDescItem">' + spec + '</span>';
diff -r /var/www/ocp/0.5.0/scripts/ocp-results.js /var/www/ocp/0.42/scripts/ocp-results.js
126,127c126
<             var skills = ocp.coreAttrs[attr].skills;
<             if (skills.length > 0) {
---
>             if (ocp.coreAttrs[attr].skills.length > 0) {
130,131c129
<                 for (var skillIndex in skills) {
<                     var skill = skills[skillIndex];
---
>                 for each (var skill in ocp.coreAttrs[attr].skills) {
138,143c136,139
<                         res +=
<                             '<td rowspan="' + skills.length + '" class="vertical" ' +
<                                 'title="Skills that affect ' + ocp.coreAttrs[attr].name + '"' +
<                             '>' +
<                                 ocp.verticalize(attr) +
<                             '</td>';
---
>                         res += '<td rowspan="' + ocp.coreAttrs[attr].skills.length +
>                                 '" class="vertical" title="Skills that affect ' +
>                                 ocp.coreAttrs[attr].name + '">' +
>                             ocp.verticalize(attr) + '</td>';
338,340c334
<             var skills = ocp.coreAttrs[attr].skills;
<             for (var skillIndex in skills) {
<                 var skill = skills[skillIndex];
---
>             for each (var skill in ocp.coreAttrs[attr].skills) {
diff -r /var/www/ocp/0.5.0/setup.bash /var/www/ocp/0.42/setup.bash
3,48d2
< # This is a bash/ksh/sh compatible script that must be source'd
< # into the current shell so environment variables, functions, and
< # aliases can be set.
< 
< # Project root directory
< export OCP_PROJ="/var/www/ocp"
< 
< # Ensure we are in a version under the root
< if [ ".${PWD#$OCP_PROJ/}" = ".$PWD" ] ; then
<     echo "Can only setup while under a version subdir of $OCP_PROJ."
<     return 1
< fi
< 
< # Get the version from the subdirectory name
< export OCP_VER="${PWD#$OCP_PROJ/}"
< export OCP_VER="${OCP_VER%%/*}"
< 
< # Root directory for this version
< export OCP_ROOT="$OCP_PROJ/$OCP_VER"
< 
< # Quick CD shortcuts
< function cdproj { cd "$OCP_PROJ${@:+/$@}" ;}
< function cdtop { cd "$OCP_ROOT${@:+/$@}" ;}
< 
< # Function to get the version from the source
< function ocpSourceVersion {
<     perl -ne 'print $1 if /\sVERSION:[^\d]+([\d.]+)/' $OCP_ROOT/scripts/ocp.js
< }
< 
< # Validate that the source version matches the directory version
< function ocpValidateVersions {
<     _srcver="`ocpSourceVersion`"
<     if [ ".$OCP_VER" != ".$_srcver" ] ; then
<         echo "Error: Source version $_srcver does not match directory" \
<             "version $OCP_VER."
<         unset _srcver
<         return 1
<     fi
<     unset _srcver
<     return 0
< }
< 
< # If the source and dir versions don't match, return failure
< ocpValidateVersions || return 1
< 
< 
50,51c4,5
< export OCP_SRC="\
<     ocp.html \
---
> export SRC_FILES="\
>     OblivCharPlanner.html \
67,68c21
< alias nedit-all="nedit-nc -g 111x40 $OCP_SRC"
< 
---
> alias nedit-all="nedit-nc -g 111x40 $SRC_FILES"
70,86c23,39
< # Backup root directory
< export OCP_BACKUP="$OCP_PROJ/backup"
< function cdback { cd "$OCP_BACKUP${@:+/$@}" ;}
< 
< # Backup the current version
< function backupsrc {
<     ocpValidateVersions &&
<     ( cd "$OCP_ROOT" &&
<       tar -cvzf "$OCP_BACKUP/backup-`date '+%Y%m%d'`-v$OCP_VER.tar.gz" .
<     )
< }
< 
< # Backup the original images
< function backuporig {
<     ( cd "$OCP_PROJ/original-images" &&
<       tar -cvzf "$OCP_BACKUP/backup-`date '+%Y%m%d'`-original-images.tar.gz" .
<     )
---
> # Quick backup
> function backupcwd {
>     dat="`date '+%Y%m%d'`";
>     ver="`perl -ne 'print $1 if /\sVERSION:[^\d]+([\d.]+)/' scripts/ocp.js`"
>     tar -cvzf backup-$dat-v$ver.tar.gz \
>         --exclude=\*.tar.gz \
>         --exclude=images/birth/original \
>         --exclude=images/class/original \
>         --exclude=images/race/original \
>         *
> }
> function backuporigcwd {
>     dat="`date '+%Y%m%d'`";
>     ver="`perl -ne 'print $1 if /\sVERSION:[^\d]+([\d.]+)/' scripts/ocp.js`"
>     tar -cvzf backup-$dat-v$ver-plus-orig.tar.gz \
>         --exclude=\*.tar.gz \
>         *
89d41
< 
95,97c47
<     sub prep() {
<         return sort grep { not /^\.svn$/ and not /\.(png|gif|jpg|jpeg)$/ } @_;
<     }
---
>     sub prep() { return sort grep { not /^\.svn$/ and not /\.(png|gif|jpg|jpeg)$/ } @_; }
100,102c50
<     find( { wanted => \&want, preprocess => \&prep,
<             no_chdir => 1, follow => 0 },
<         @ARGV );' -- "${@:-.}"
---
>     find( { wanted => \&want, preprocess => \&prep, no_chdir => 1, follow => 0 }, @ARGV );' -- "${@:-.}"
107,116c55,57
< alias grepsrc='find_text_files -0 "$OCP_ROOT" | xargs -0 grep'
< function grepver {
<     if [ $# -lt 1 ] ; then
<         echo "Error: grepver requires at least one argument."
<         return 1
<     else
<         _ver="$1" ; shift
<         find_text_files -0 "$OCP_PROJ/$_ver" | xargs -0 grep ${@:+"$@"}
<     fi
< }
---
> #alias grepsrc='find_text_files -0 "$FLEXDKP_SOURCE_DIR" | xargs -0 grep'
> #alias greppub='find_text_files -0 "$FLEXDKP_PUBLIC_DIR" | xargs -0 grep'
> #alias grepzend='find_text_files -0 "$FLEXDKP_ZEND_DIR" | xargs -0 grep'
120c61,62
< alias checksrc='find_text_files -0 "$OCP_ROOT" | xargs -0 grep -E "([[:cntrl:]]|[[:space:]]\$)"'
---
> #alias checksrc='find_text_files -0 $FLEXDKP_SOURCE_DIR | xargs -0 grep -E "([[:cntrl:]]|[[:space:]]\$)"'
> #alias checkpub='find_text_files -0 $FLEXDKP_PUBLIC_DIR | xargs -0 grep -E "([[:cntrl:]]|[[:space:]]\$)"'
152a95
> 
154c97,98
< alias cleansrc='cleandir "$OCP_ROOT"'
---
> #alias cleansrc='cleandir "$FLEXDKP_SOURCE_DIR"'
> #alias cleanpub='cleandir "$FLEXDKP_PUBLIC_DIR"'
160c104
<         grep -v '\.txt$' | \
---
>         grep -v htaccess | \
166d109
< alias countsrc='countdir "$OCP_ROOT"'
169,202c112,115
< function wcdir {
<     find_text_files "${@:-.}" | \
<         grep -v setup.bash | \
<         grep -v '\.txt$' | \
<         xargs wc --chars --max-line-length --lines
< }
< alias wccwd='wcdir .'
< alias wcsrc='wcdir "$OCP_ROOT"'
< 
< # Diff versus current source
< # *** Be awesome if these could compare sub-dirs
< # *** (e.g. while in .../ver2/scripts, diffcwd would only compare
< # *** .../ver1/scripts to ../ver2/scripts)
< function diffdir {
<     if [ $# -lt 2 ] ; then
<         echo "Error: diffdir requires at least two arguments."
<         return 1
<     else
<         _dir1="$1" ; shift
<         _dir2="$1" ; shift
<         diff -r "$@" "$_dir1" "$_dir2"
<     fi
< }
< alias diffcwd='diffdir "$OCP_ROOT" .'
< function diffver {
<     if [ $# -lt 1 ] ; then
<         echo "Error: diffver requires at least one argument."
<         return 1
<     else
<         _ver="$1" ; shift
<         diff -r "$@" "$OCP_ROOT" "$OCP_PROJ/$_ver"
<     fi
< }
< 
---
> alias wccwd="find_text_files . | \
>     grep -v setup.bash | \
>     grep -v htaccess | \
>     xargs wc --chars --max-line-length --lines"
245,248d157
< 
< 
< # Return success
< return 0
diff -r /var/www/ocp/0.5.0/styles/ocp.css /var/www/ocp/0.42/styles/ocp.css
719a720
> /*
722c723
< /*
---
> */
726d726
< */
diff -r diff -r /var/www/ocp/0.5.0/ocp.html /var/www/ocp/0.42/OblivCharPlanner.html
8,21c8,12
<     (C) Copyright 2009 by Richard Doll
<     Developed on FireFox 3.0.* using Dojo 1.3.*.
< 
<     For JavaScript browser compatibility per
<     http://en.wikipedia.org/wiki/Comparison_of_layout_engines_(ECMAScript)
<     + Using "for" (and dereferencing an index) instead of "for each"
<     + Using "dojo.indexOf" instead of "Array.indexOf"
< 
<     This currently fails in IE for several reasons, but major ones are:
<     + IE doesn't support XHTML. Per http://www.w3.org/TR/xhtml-media-types/,
<       many <.../> tags need to be converted to <...></...>.
<     + IE doesn't support getters which are used all over the place
<     Even with these fixed, the styles are still not properly rendered in IE.
< 
---
>     Copyright (C) 2009 by Richard Doll
>     Written with Dojo 1.3.1
>     Developed on FireFox 3.0.*, but should be DOM and JavaScript 1.5 compatible.
> *** "for each" and array "indexOf" are JavaScript 1.6 constructs...
> *** Need to test on IE or warn if user isn't using FireFox ***
52d42
<     <!--
55c45
<     -->
---
>     <!--
56a47
>     -->
90c81
<             //baseUrl: './',
---
>             baseUrl: './',
96,97c87,88
<                 'ocp': '../../scripts'
<                 //'ocp': 'scripts'
---
>                 //'ocp': '../../scripts'
>                 'ocp': 'scripts'
124d114
<     <script type="text/javascript" src="dojotoolkit/dojo/dojo.js"></script>
126c116
<     <script type="text/javascript" src="http://o.aolcdn.com/dojo/1.3/dojo/dojo.xd.js"></script>
---
>     <script type="text/javascript" src="dojotoolkit/dojo/dojo.js"></script>
127a118
>     <script type="text/javascript" src="http://o.aolcdn.com/dojo/1.3/dojo/dojo.xd.js"></script>
152,162c143
<     <!--- *** Add complete usage instructions -->
<     <p>
<         Complete usage instructions will accompany the full release, but essentially
<         this browser-based tool can be used to evaluate the potential maximums of any
<         new or existing Oblivion character. For details on why this is important and some
<         strategies for addressing the "leveling problem", the
<         articles at <a href="http://www.uesp.net/">UESP</a> are highly recommended (especially
<         <a href="http://www.uesp.net/wiki/Oblivion:Leveling">Leveling</a>,
<         <a href="http://www.uesp.net/wiki/Oblivion:Efficient_Leveling">Efficient Leveling</a>, and
<         <a href="http://www.uesp.net/wiki/Oblivion:Character_Creation">Character Creation</a>).
<     </p>
---
>     <p>Something about how to use this thing...</p>
168,170c149,150
<             <span style="font-weight: bold; font-style: italic; color: red;">Important Note:</span>
<             This fully functional <b>beta</b> is still in development and has the following
<             known issues and limitations:
---
>             <span style="font-weight: bold; font-style: italic; color: red;">Warning:</span>
>             This <b>beta</b> is still in development and has the following known issues and limitations:
177,182c157,158
<                     You must allow JavaScript on this server and from o.aolcdn.com.
<                     For speed, the AOL CDN provides a "local" copy of the Dojo Toolkit.
<                 </li>
<                 <li>
<                     There may be a small memory leak on page loading. After doing many,
<                     many page reloads, you should close/reopen your browser.
---
>                     This uses the Dojo Toolkit from the AOL CDN so you must allow
>                     JavaScript from both this server and from o.aol.cdn.
185,186c161,162
<                     The colors/styles are currently minimal, yet (hopefully) informative.
<                     Upon release, the colors/styles will be made much "sexier".
---
>                     There is a small memory leak on page loading. After doing many,
>                     many page reloads, you should close and reopen your browser.
355,356c331
<             Using
<             <a href="http://www.dojotoolkit.org/">Dojo v<span id="dojoVersion">-none-</span></a>
---
>             Using <a href="http://www.dojotoolkit.org/">Dojo Toolkit v<span id="dojoVersion" /></a>
360c335
<             <!-- *** Put email addy link here? Encoded in some way, perhaps? -->
---
>             <!-- *** Put email addy link here? -->
362c337
<             <div>Oblivion Character Planner (OCP) version <span id="ocpVersion">-none-</span></div>
---
>             <div>Oblivion Character Planner (OCP) version <span id="ocpVersion" /></div>
